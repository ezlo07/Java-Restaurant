/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package take.away.restaurant.managements;

import java.util.Date;
import javax.swing.table.DefaultTableModel;
import java.util.Iterator;
import java.util.List;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.sql.Statement;

public class CardForm extends javax.swing.JFrame {

    public static List address, card, order, restaurant, user, menulist;
    public static Connection connection;

    public CardForm() {
        initComponents();
        try {
            connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/tarm", "root", "");
            JOptionPane.showMessageDialog(null, "Connection True!");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Connection failed!" + e.getMessage());
        }
        refresh_JTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jcard_id = new javax.swing.JTextField();
        jcard_no = new javax.swing.JTextField();
        jcard_fname = new javax.swing.JTextField();
        jCard_exp = new javax.swing.JTextField();
        Add_Card = new javax.swing.JButton();
        Update_Card = new javax.swing.JButton();
        Delete_Card = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Card ID:");

        jLabel2.setText("Card No.");

        jLabel3.setText("Card Full Name:");

        jLabel4.setText("Card Exp Date:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Card ID", "Card No", "Full Name", "Exp. Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        Add_Card.setText("Add");
        Add_Card.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_CardActionPerformed(evt);
            }
        });

        Update_Card.setText("Update");
        Update_Card.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_CardActionPerformed(evt);
            }
        });

        Delete_Card.setText("Delete");
        Delete_Card.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_CardActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Add_Card)
                        .addGap(18, 18, 18)
                        .addComponent(Update_Card)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                        .addComponent(Delete_Card))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jCard_exp, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcard_id, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jcard_no)
                            .addComponent(jcard_fname, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jcard_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcard_no, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jcard_fname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jCard_exp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Add_Card)
                    .addComponent(Update_Card)
                    .addComponent(Delete_Card))
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        try {
            DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();
            String a = tblModel.getValueAt(jTable1.getSelectedRow(), 0).toString();
            String b = tblModel.getValueAt(jTable1.getSelectedRow(), 1).toString();
            String c = tblModel.getValueAt(jTable1.getSelectedRow(), 2).toString();
            String d = tblModel.getValueAt(jTable1.getSelectedRow(), 3).toString();

            jcard_id.setText(a);
            jcard_no.setText(b);
            jcard_fname.setText(c);
            jCard_exp.setText(d);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Zort");
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void Add_CardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_CardActionPerformed
        if (!jcard_id.getText().trim().isEmpty()
                && !jcard_no.getText().trim().isEmpty()
                && !jcard_fname.getText().trim().isEmpty()
                && !jCard_exp.getText().trim().isEmpty()) {
            int crd_id = Integer.parseInt(jcard_id.getText().trim());
            int crd_no = Integer.parseInt(jcard_no.getText().trim());
            String crd_fname = jcard_fname.getText().trim();
            String crd_exp_date = jCard_exp.getText().trim();

            TakeAwayRestaurantManagements.add_card(crd_id, crd_no, crd_fname, crd_exp_date);
            JOptionPane.showMessageDialog(null, "Ok!");
            refresh_JTable();

        }
    }//GEN-LAST:event_Add_CardActionPerformed

    private void Update_CardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update_CardActionPerformed
        if (!jcard_id.getText().trim().isEmpty()
                && !jcard_no.getText().trim().isEmpty()
                && !jcard_fname.getText().trim().isEmpty()
                && !jCard_exp.getText().trim().isEmpty()) {
            int crd_id = Integer.parseInt(jcard_id.getText().trim());
            int crd_no = Integer.parseInt(jcard_no.getText().trim());
            String crd_fname = jcard_fname.getText().trim();
            String crd_exp_date = jCard_exp.getText().trim();

            TakeAwayRestaurantManagements.edit_card(crd_id, crd_no, crd_fname, crd_exp_date);
            JOptionPane.showMessageDialog(null, "Ok!");
            refresh_JTable();
        }
    }//GEN-LAST:event_Update_CardActionPerformed

    private void Delete_CardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_CardActionPerformed
        int row = jTable1.getSelectedRow();
        String cell = jTable1.getModel().getValueAt(row, 0).toString();
        String sql = "DELETE FROM card where crd_id = " + cell;
        try {
            PreparedStatement statement = connection.prepareStatement(sql);
            statement.executeUpdate();
            refresh_JTable();

        } catch (Exception e) {
        }
    }//GEN-LAST:event_Delete_CardActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CardForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CardForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CardForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CardForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CardForm().setVisible(true);
            }
        });
    }

    public void refresh_JTable() {
        List card = TakeAwayRestaurantManagements.card;
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        Object rowData[] = new Object[4];
        Iterator itr = card.iterator();
        Card cd;
        model.setNumRows(0);

        while (itr.hasNext()) {
            cd = (Card) itr.next();
            rowData[0] = cd.getCrd_id();
            rowData[1] = cd.getCrd_no();
            rowData[2] = cd.getCrd_fname();
            rowData[3] = cd.getCrd_exp_date();

            model.addRow(rowData);
        }
        try {
            ResultSet res;
            String sql = "SELECT * FROM card";
            Statement stmt = connection.createStatement();
            res = stmt.executeQuery(sql);
            while (res.next()) {
                String crd_id = res.getString("crd_id");
                String crd_no = res.getString("crd_no");
                String crd_fname = res.getString("crd_fname");
                String crd_exp_date = res.getString("crd_exp_date");

                String tbData[] = {crd_id, crd_no, crd_fname, crd_exp_date};
                DefaultTableModel tblModel = (DefaultTableModel) jTable1.getModel();
                tblModel.addRow(tbData);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Buzlubamde" + e.getMessage());
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add_Card;
    private javax.swing.JButton Delete_Card;
    private javax.swing.JButton Update_Card;
    private javax.swing.JTextField jCard_exp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jcard_fname;
    private javax.swing.JTextField jcard_id;
    private javax.swing.JTextField jcard_no;
    // End of variables declaration//GEN-END:variables
}
